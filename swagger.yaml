openapi: 3.0.0
x-stoplight:
  id: ccmvu53jqi0gc
info:
  title: petik.com API
  description: API petik.com Documentation for Final Project MSIB Batch 3 in Binar Academy
  version: 1.0.0
servers:
  - url: "http://localhost:3000/"
    description: My Localhost
  - url: "https://petikcom-api-dev.km3ggwp.com/"
    description: Railway Deployment/
paths:
  /auth/login-google:
    get:
      summary: Login Google Oauth2
      description: Login Google Endpoint
      tags:
        - Auth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                      token:
                        type: string
              examples:
                example-1:
                  value:
                    status: true
                    message: Success
                    data:
                      user_id: 1
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJkZWRlbnNldHlhd2FuMTdAZ21haWwuY29tIiwicm9sZSI6IkJVWUVSIiwiaWF0IjoxNjY5NDY1MDk3LCJleHAiOjE2Njk0Njg2OTd9.0ashbxN_rTFEQNujTYgwnn3nLP0UI66cItxd5YepCOs
        "400":
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    nullable: true
              examples:
                example-1:
                  value:
                    status: false
                    message: Your account is already used
                    data: null
      operationId: auth-login-google
      parameters:
        - schema:
            type: string
          in: query
          name: access_token
          description: access token from Front End
          required: true
  /auth/register:
    post:
      summary: Register
      description: Register Endpoint
      tags:
        - Auth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                confirm_password:
                  type: string
                  format: password
              required:
                - email
                - password
                - confirm_password
            example:
              email: dedensetyawan17@gmail.com
              password: deden123
              confirm_password: deden123
      responses:
        "201":
          description: Created
          content:
            aplication/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      email:
                        type: string
              examples:
                example-1:
                  value:
                    status: true
                    message: Register Success!
                    data:
                      email: dedensetyawan17@gmail.com
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              examples:
                example-1:
                  value:
                    status: false
                    message: Password doesn't match!
                    data: null
                example-2:
                  value:
                    status: false
                    message: Email not valid / Password at least 6 characters
                    data: null
                example-3:
                  value:
                    status: false
                    message: Email already used!
                    data: null
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /auth/verify:
    get:
      summary: Verify Email
      description: Verify Email Endpoint
      tags:
        - Auth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: integer
              examples:
                example-1:
                  value:
                    status: true
                    message: Email Verified!
                    data:
                      - 1
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    status: false
                    message: invalid token
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                x-examples:
                  example-1:
                    status: false
                    message: jwt expired
      parameters:
        - schema:
            type: string
          in: query
          name: token
          required: true
  /auth/login:
    post:
      summary: Login
      description: Login Endpoint
      tags:
        - Auth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                      token:
                        type: string
              examples:
                example-1:
                  value:
                    status: true
                    message: login success!
                    data:
                      email: dedensetyawan17@gmail.com
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJkZWRlbnNldHlhd2FuMTdAZ21haWwuY29tIiwicm9sZSI6IkJVWUVSIiwiaWF0IjoxNjY5NDYwNTg0LCJleHAiOjE2Njk0NjQxODR9.UpEBOEZ4sVQfWhtzsdcJRUoJyROBVl8z6W528rMtYaY
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              examples:
                example-1:
                  value:
                    status: false
                    message: Email not valid!
                    data: null
                example-2:
                  value:
                    status: false
                    message: Wrong email or password!
                    data: null
                example-3:
                  value:
                    status: false
                    message: Email not verifed!
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
            examples:
              example-1:
                value:
                  email: dedensetyawan17@gmail.com
                  password: deden123
        description: Email must be valid and password at least 6 character
  /auth/change-password:
    put:
      summary: Change Password
      description: Change Password Endpoint
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: integer
              examples:
                example-1:
                  value:
                    status: true
                    message: Password Updated!
                    data:
                      - 1
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
              examples:
                example-1:
                  value:
                    status: false
                    message: Password Doesn't Match
                    data: null
                example-2:
                  value:
                    status: false
                    message: Old Password Doesn't Match!
                    data: null
                example-3:
                  value:
                    status: false
                    message: Password at least 6 characters
                    data: null
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  format: password
                newPassword:
                  type: string
                  format: password
                confirmNewPassword:
                  type: string
                  format: password
              required:
                - oldPassword
                - newPassword
                - confirmNewPassword
            examples:
              example-1:
                value:
                  oldPassword: deden123
                  newPassword: dedens123
                  confirmNewPassword: dedens123
  /auth/forgot-password:
    post:
      summary: Forgot Password
      description: Forgot Password Endpoint
      tags:
        - Auth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: string
              examples:
                example-1:
                  value:
                    status: true
                    message: success send reset password link to email
                    data: dedensetyawan17@gmail.com
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    status: false
                    message: Email not found
                example-2:
                  value:
                    status: false
                    message: Email not valid!
                    data: null
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
            examples:
              example-1:
                value:
                  email: dedensetyawan17@gmail.com
  /auth/reset-password:
    put:
      summary: Reset Password
      description: Reset Password Endpoint
      tags:
        - Auth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
              examples:
                example-1:
                  value:
                    status: true
                    message: success change password
                    data:
                      id: 1
                      email: dedensetyawan17@gmail.com
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    status: false
                    message: Password at least 6 characters!
                    data: null
                example-2:
                  value:
                    status: false
                    message: invalid token
                example-3:
                  value:
                    status: false
                    message: Password not match!
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      parameters:
        - schema:
            type: string
          in: query
          name: token
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                newPass:
                  type: string
                  format: password
                confirmNewPass:
                  type: string
                  format: password
              required:
                - newPass
                - confirmNewPass
            examples:
              example-1:
                value:
                  newPass: deden123
                  confirmNewPass: deden123
  /user/create-bio:
    parameters: []
    post:
      summary: Create User Biodata
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
              examples:
                example-1:
                  value:
                    status: true
                    message: success
                    data:
                      id: 2
                      email: dedensetyawan17@gmail.com
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: "null"
              examples:
                example-1:
                  value:
                    status: false
                    message: Must be string / The phone number must be started with '+'!
                    data: null
      description: Create user biodata endpoint
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                gender:
                  type: string
                phoneNumber:
                  type: string
                address:
                  type: string
                nationality:
                  type: string
              required:
                - firstName
                - lastName
                - gender
                - phoneNumber
                - address
                - nationality
            examples:
              example-1:
                value:
                  firstName: Deden
                  lastName: Setyawan
                  gender: Male
                  phoneNumber: "+6285123258456"
                  address: "Gianyar, Bali"
                  nationality: Indonesia
        description: All must be string and phone number must be started with '+'
      tags:
        - User
  /user/update-bio:
    parameters: []
    put:
      summary: Update User Biodata
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
              examples:
                example-1:
                  value:
                    status: true
                    message: Success update user!
                    data:
                      id: 2
                      email: dedensetyawan17@gmail.com
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: "null"
              examples:
                example-1:
                  value:
                    status: false
                    message: Must be String / The phone number must be started with '+'!
                    data: null
      description: Update user biodata endpoint
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                gender:
                  type: string
                phoneNumber:
                  type: string
                address:
                  type: string
                nationality:
                  type: string
            examples:
              example-1:
                value:
                  firstName: Deden
                  lastName: Setyawan
                  gender: Male
                  phoneNumber: "+62895621258456"
                  address: "Gianyar, Gianyar, Bali"
                  nationality: Indonesia
      tags:
        - User
  /user/show-bio:
    get:
      summary: Show User Biodata
      tags:
        - User
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      password:
                        type: string
                      role_id:
                        type: integer
                      status:
                        type: boolean
                      user_type:
                        type: string
                      isActive:
                        type: boolean
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                      biodata:
                        type: object
                        properties:
                          id:
                            type: integer
                          user_id:
                            type: integer
                          firstName:
                            type: string
                          lastName:
                            type: string
                          gender:
                            type: string
                          phoneNumber:
                            type: string
                          address:
                            type: string
                          nationality:
                            type: string
                          createdAt:
                            type: string
                          updatedAt:
                            type: string
              examples:
                example-1:
                  value:
                    status: true
                    message: Success get user data!
                    data:
                      id: 2
                      email: dedensetyawan17@gmail.com
                      password: $2b$10$.UrCdGS6DnWc7cT7StAgAOOM/tfoAbnsyM22jKAkh0X8QAcGO3Qwm
                      role_id: 2
                      status: true
                      user_type: BASIC
                      isActive: true
                      createdAt: "2022-12-01T01:40:23.026Z"
                      updatedAt: "2022-12-01T01:40:23.026Z"
                      biodata:
                        id: 1
                        user_id: 2
                        firstName: Deden
                        lastName: Setyawan
                        gender: Male
                        phoneNumber: "+62895621258456"
                        address: "Gianyar, Gianyar, Bali"
                        nationality: Indonesia
                        createdAt: "2022-12-01T01:41:32.692Z"
                        updatedAt: "2022-12-01T01:53:40.873Z"
      description: Show user biodata endpoint
      security:
        - bearerAuth: []
  /user/delete-account:
    put:
      summary: Delete User Account (Soft Delete)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: integer
              examples:
                example-1:
                  value:
                    status: true
                    message: User Deleted!
                    data:
                      - 1
      description: Delete user account endpoint
      security:
        - bearerAuth: []
      tags:
        - User
  "/user/get-user/{user_id}":
    get:
      summary: Get User
      tags:
        - User
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      password:
                        type: string
                      role_id:
                        type: integer
                      status:
                        type: boolean
                      user_type:
                        type: string
                      isActive:
                        type: boolean
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                      biodata:
                        type: object
                        properties:
                          id:
                            type: integer
                          user_id:
                            type: integer
                          firstName:
                            type: string
                          lastName:
                            type: string
                          gender:
                            type: string
                          phoneNumber:
                            type: string
                          address:
                            type: string
                          nationality:
                            type: string
                          createdAt:
                            type: string
                          updatedAt:
                            type: string
              examples:
                example-1:
                  value:
                    status: true
                    message: Success get user data!
                    data:
                      id: 2
                      email: dedensetyawan17@gmail.com
                      password: $2b$10$.UrCdGS6DnWc7cT7StAgAOOM/tfoAbnsyM22jKAkh0X8QAcGO3Qwm
                      role_id: 2
                      status: false
                      user_type: BASIC
                      isActive: false
                      createdAt: "2022-12-01T01:40:23.026Z"
                      updatedAt: "2022-12-01T01:58:57.155Z"
                      biodata:
                        id: 1
                        user_id: 2
                        firstName: Deden
                        lastName: Setyawan
                        gender: Male
                        phoneNumber: "+62895621258456"
                        address: "Gianyar, Gianyar, Bali"
                        nationality: Indonesia
                        createdAt: "2022-12-01T01:41:32.692Z"
                        updatedAt: "2022-12-01T01:53:40.873Z"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: "null"
              examples:
                example-1:
                  value:
                    status: false
                    message: User not found!
                    data: null
      description: Get user endpoint
      security:
        - bearerAuth: []
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
  /user/get-users:
    get:
      summary: Get Users
      tags:
        - User
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      password:
                        type: string
                      role_id:
                        type: integer
                      status:
                        type: boolean
                      user_type:
                        type: string
                      isActive:
                        type: boolean
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                      biodata:
                        type: object
                        properties:
                          id:
                            type: integer
                          user_id:
                            type: integer
                          firstName:
                            type: string
                          lastName:
                            type: string
                          gender:
                            type: string
                          phoneNumber:
                            type: string
                          address:
                            type: string
                          nationality:
                            type: string
                          createdAt:
                            type: string
                          updatedAt:
                            type: string
              examples:
                example-1:
                  value:
                    status: true
                    message: Success get user data!
                    data:
                      id: 2
                      email: dedensetyawan17@gmail.com
                      password: $2b$10$.UrCdGS6DnWc7cT7StAgAOOM/tfoAbnsyM22jKAkh0X8QAcGO3Qwm
                      role_id: 2
                      status: false
                      user_type: BASIC
                      isActive: false
                      createdAt: "2022-12-01T01:40:23.026Z"
                      updatedAt: "2022-12-01T01:58:57.155Z"
                      biodata:
                        id: 1
                        user_id: 2
                        firstName: Deden
                        lastName: Setyawan
                        gender: Male
                        phoneNumber: "+62895621258456"
                        address: "Gianyar, Gianyar, Bali"
                        nationality: Indonesia
                        createdAt: "2022-12-01T01:41:32.692Z"
                        updatedAt: "2022-12-01T01:53:40.873Z"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: "null"
              examples:
                example-1:
                  value:
                    status: false
                    message: User not found!
                    data: null
      description: Get users endpoint
      security:
        - bearerAuth: []
    parameters: []
  /user/upload-avatar:
    put:
      summary: Upload User Avatar
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: integer
              examples:
                example-1:
                  value:
                    status: true
                    message: Avatar Uploaded!
                    data:
                      - 1
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              examples:
                example-1:
                  value:
                    status: false
                    message: "only png, jpg, and jpeg allowed to upload!"
      description: Upload user avatar endpoint
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
        description: "Only png, jpg, and jpeg allowed to upload"
  /user/delete-avatar:
    put:
      summary: Delete User Avatar
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: integer
              examples:
                example-1:
                  value:
                    status: true
                    message: Avatar Deleted!
                    data:
                      - 1
      description: Delete user avatar endpoint
      security:
        - bearerAuth: []
components:
  schemas: {}
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
